/*Program to check if two words entered by user are anagrams of each other or not;
 if they are, translate both to piglatin
 ANAGRAM - A word, phrase or name formed by reversing the order of the letters of another word
  Eg. 'spar' and 'raps' are anagrams
 PIG LATIN - An encrypted word in English, which is generated by doing following alterations:
 
 The first vowel occurring in the input word is placed at the start of the new word along with the 
 remaining alphabets of it. The alphabets present before the first vowel are shifted at the end of the 
 new word followed by “ay”. */
import java.io.*; //importing io package
class Words //start of class
{
   public static void main(String args[])throws IOException //start of main method
   {
      String word1 = " ", word2 = " ";
      int l = 0, found = 0, not_found = 0, pos1 = 0, pos2 = 0;
      char ch;
      //initializing variables
      InputStreamReader isr = new InputStreamReader(System.in);
      BufferedReader br = new BufferedReader (isr);
      System.out.println("Enter 2 words to check if they are anagrams");
      word1 = br.readLine(); 
      word1 = word1.toUpperCase();
      int l1 = word1.length();
      word2 = br.readLine(); 
      word2 = word2.toUpperCase();
      int l2 = word2.length();
      //taking input from user
      System.out.println(" ");
      if(l1 == l2) //checking if the lengths of the two words are equal
      {
         l = l1;
         for(int i = 0; i < l; i++)
         {
            found = 0;
            for(int j = 0; j < l; j++)
            {
               if(word1.charAt(i) == word2.charAt(j)) //condition for words to be anagrams of each other
               {
                  found = 1;
                  break;
               }//end of if statement
            }//end of for loop
            if(found == 0)
            {
               not_found = 1;
               break;
            }//end of if statement
         }//end of for loop
         if(not_found == 1)
         {
            System.out.println("The two words are NOT anagrams to each other");
         }
         else
         {
            System.out.println("The two words are anagrams to each other");
            
            String a, b, c;
            //initializing variables
            for(int i = 0; i < l; i++)
            {
               ch = word1.charAt(i);
               if(ch =='A'|| ch =='E'|| ch =='I'|| ch =='O'|| ch =='U')//searching for vowel if any
               {
                  pos1 = i; 
                  break;
               }//end of if statement
            }
             for(int i = 0; i < l; i++)
            {   
               ch = word2.charAt(i);
               if(ch =='A'|| ch =='E'|| ch =='I'|| ch =='O'|| ch =='U')//searching for vowel if any
               {
                  pos2 = i; 
                  break;
               }//end of if statement
            } //end of for loop
            a = word1.substring(0,pos1);
            b = word1.substring(pos1,l);
            c = b + a + "AY";
            //converting String entered by user (word1) to pig latin
            System.out.println(" ");
            System.out.println(word1 + " translated to pig latin: " + c);
            a = word2.substring(0,pos2);
            b = word2.substring(pos2,l);
            c = b + a + "AY";
            //converting String entered by user (word1) to pig latin
            System.out.println(" ");
            System.out.println(word2 + " translated to pig latin: " + c);
         }//end of if-else statement 
       }
      else
      {
         System.out.println("The two words are NOT anagrams to each other");
      }//end of if-else statement
   }//end of main method
}//end of class
/**VDT
 Variable      Datatype          Description
  word1         String      to take input from user                   
  word2         String      to take input from user            
    l            int           temorary variable                         
    l1           int       to find length of 'word1'           
    l2           int       to find length of 'word2'            
   found         int            to store value        
 not_found       int            to store value            
    i            int      control variable to run loop              
    j            int      control variable to run loop  */
